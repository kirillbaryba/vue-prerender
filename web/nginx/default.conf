# server {
#   listen 3000;

#   location / {
#     root /usr/share/nginx/html;
#     index index.html index.htm;
#     try_files $uri $uri/ /index.html =404;
#   }
# }

server {
listen 3000;
# server_name example.com;

root /usr/share/nginx/html;
index index.html index.htm;

location / {
proxy_set_header X-Prerender-Token YOUR TOKEN GOES HERE;
set $prerender 0;
if ($http_user_agent ~* "googlebot|apis-google|mediapartners-google|adsbot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest\/0\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|facebot") {
set $prerender 1;
}
if ($args ~ "_escaped_fragment_") {
set $prerender 1;
}
# if ($http_user_agent ~ "Prerender") {
# set $prerender 0;
# }
if ($uri ~ "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
set $prerender 0;
}
#resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
resolver 8.8.8.8;

if ($prerender = 1) {
#setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
set $prerender "service.prerender.io";
# rewrite .* /$scheme://$host$request_uri? break;
rewrite .* /https://$host$request_uri? break;
proxy_pass http://$prerender;
}

try_files $uri $uri/ /index.html =404;
}

location /sitemap.xml {
    alias /usr/share/nginx/html/sitemap.xml;
}
}
